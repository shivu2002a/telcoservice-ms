Telecom provisioning system

Client 
Admin
Application

Customers 
-- Signup/login
-- Avail services (automatically subsribed)
-- Modify services
-- Terminate services

Admin
-- Create services
-- Modify services (configure new details / change existing details)
-- Remove services 

Services needed
1. Internet plans 
2. Tv recharge plans
3. Wifi plans


Mysql Database Tables:
1. Users
2. InternetServices
3. TvServices
4. TvServicesAvailed
5. InternetServicesAvailed


Scenarios
1. A plan is updated. But the new changes should not reflect to the already subscribed customers. 
2. Updated plans should have policy which mentions either for existing/new customers.
3. Separate old plans and new plans by a flag or boolean.
4. help page / contact page

-----------------------------------------------------------------------------------------------------------------------------
Internet plans:

Home internet
1. 1000 gb 5G data Data, Speed D/U 317/36
2. Basic NBN plans (unlimited data) Speed D/U 317/36
3. Essential nbn (unlimited data)
4. Premium nbn (unlimited data)
5. Ultimate 
6. Ultrafast

Mobile broadband
1. Data + mobile
2. Sim only data plans
3. Prepaid plans






Upcoming:
1. Notification
2. Billing

Diagrams:
Class, Sequence, Use case, ER, High Level



-- Table to store user information
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    password varchar(50),
    phoneno varchar(10),
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table to store information about different internet services
CREATE TABLE InternetServices (
    ServiceID INT PRIMARY KEY AUTO_INCREMENT,
    ServiceName VARCHAR(100) NOT NULL,
    Description TEXT,
    serviceType varchar(50),
    serviceDownloadSpeed INT,
    serviceUploadSpeed INT,
    benefits TEXT,
    criteria text,
    active boolean,
    MonthlyCost DECIMAL(10, 2)
);

-- Table to store information about different TV services
CREATE TABLE TvServices (
    ServiceID INT PRIMARY KEY AUTO_INCREMENT,
    ServiceName VARCHAR(100) NOT NULL,
    Description TEXT,
    benefits text,
    criteria text,
    active boolean,
    MonthlyCost DECIMAL(10, 2)
);

-- Table to link users with the TV services they have availed
CREATE TABLE TvServicesAvailed (
    UserID INT,
    ServiceID INT,
    StartDate DATE,
    EndDate DATE,
    PRIMARY KEY (UserID, ServiceID, StartDate),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (ServiceID) REFERENCES TvServices(ServiceID)
);

-- Table to link users with the internet services they have availed
CREATE TABLE InternetServicesAvailed (
    UserID INT,
    ServiceID INT,
    StartDate DATE,
    EndDate DATE,
    PRIMARY KEY (UserID, ServiceID, StartDate),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (ServiceID) REFERENCES InternetServices(ServiceID)
);

CREATE TABLE pendingrequests (
    id int,
    servicetype varchar(20),
    createdAt TIMESTAMP,
    userId int,
    serviceid int
);

CREATE TABLE internet_service_feedback {
    id int,
    service_id int,
    feedback varchar(500),
    user_id int,
    createdAt TIMESTAMP
    PRIMARY KEY(id),
    FOREIGN KEY service_id REFERENCES internet_service(service_id)
}

CREATE TABLE tv_service_feedback {
    id int,
    service_id int,
    feedback varchar(500),
    user_id int,
    createdAt TIMESTAMP
    PRIMARY KEY(id),
    FOREIGN KEY service_id REFERENCES tv_service(service_id)
}
✅ Pending requests of user 
✅ Phno in reg,
✅ validity num of days in each service
✅ metric for Admin
✅ Feedback
✅ number of services availed by user

✅ Update upgrading, downgrading, subscribe, terminate as for the Q
✅ Address in UserModel


✅ Tested Tv services subscribe and terminate along with pendingrequests
✅ Tested CRUD for both type services
✅ Tested feedback create/read apis
✅ Tested PendingRequest apis

To do
Test internet services subscribe and terminate along with pendingrequests